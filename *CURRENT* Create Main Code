#include <kipr/botball.h>

void blackleft (int integer);
void rturn90 (int degrees);
void blackright (int integer);
void drive (int inches);
void closescoop (int integer);
void openscoop (int integer);
void armup (int integer);
void armdown (int integer);
void lturn90 (int degrees);
void linetrack (int integer);
void openmed (int integer);
void camerafind (int integer);
int main()
{
create_connect();
rturn90(90);
blackleft(1);
rturn90(90);
blackright(1);
openscoop(1);
armdown(1);
drive(18);
closescoop(1);
drive(3);
lturn90(90);
blackleft(1);
armup(1);
openmed(1);
lturn90(90);
armdown(1);
linetrack(1);
camerafind(1);
armup(1);
closescoop(1);
create_stop();
create_disconnect();
return (0);
}
void blackleft (int integer)
        {
        while (get_create_lcliff_amt()>1950)
        {
        create_drive_direct(200,200);
        msleep(integer*10);
        create_stop();
        }
        }
void rturn90 (int degrees)
        {
        set_create_total_angle(0);
        while (abs(get_create_total_angle())<1.033*degrees)
        {
        create_drive_direct(200,-200);
        }
        create_stop();
        }
void blackright (int integer)
        {
        while (get_create_rcliff_amt()>1950)
        {
        create_drive_direct(200,200);
        msleep(integer*10);
        create_stop();
        }
        }
void drive (int inches)
        {
        set_create_distance(0);
        while (abs(get_create_distance())<inches*27.636)
        {
        create_drive_direct(250,250);
        }
        create_stop();
        }
void closescoop (int integer)
        {
        enable_servo(3);
        set_servo_position(3,1858);
        msleep(integer*250);
        disable_servo(3);
        }
void openscoop (int integer)
        {
        enable_servo(3);
        set_servo_position(3,948);
        msleep(integer*250);
        disable_servo(3);
        }
void armup (int integer)
        {
        enable_servo(2);
        set_servo_position(2,1400);
        msleep(integer*250);
        disable_servo(2);
        }
void armdown (int integer)
        {
        enable_servo(2);
        set_servo_position(2,300);
        msleep(integer*250);
        disable_servo(2);
        }
void lturn90 (int degrees)
        {
        set_create_total_angle(0);
        while (abs(get_create_total_angle())<1.033*degrees)
        {
        create_drive_direct(-200,200);
        }
        create_stop();
        }
void linetrack (int integer)
        {
        while (abs(get_create_distance())<1800)
        {
        if (get_create_rfcliff_amt()>1950)
        {
        create_drive_direct(150,50);
        msleep(integer*10);
        }
        else
        {
        create_drive_direct(50,150);
        msleep(10);
        }
        }
        create_stop();
        }
void openmed (int integer)
   	{
        enable_servo(3);
        set_servo_position(3,1300);
        msleep(integer*250);
        disable_servo(3);
        }
void camerafind (int integer)
        {
        camera_open();
        camera_update();
        If (get_object_center_x(0,0) > 0*integer)
        {
        closescoop(1);
        rturn90(90);
        create_stop();
        }
        else
        {
        openscoop(1);
        drive(1);
        create_stop();
        }
        }
