
   
#include <kipr/botball.h>

void forward(int cm)
{
    cmpc(0);
    int x = 88.8;
    while (gmpc(0)<(cm*x))
    {
        motor(0, 49);
        motor(3, 50);
    }
}
void reverse(int cm)
{
    cmpc(0);
    int x = 88.8;
    while (-(gmpc(0))<(cm*x))
    {
        motor(0, -49.5);
        motor(3, -50);
    }
}
void right(int deg)
{
    cmpc(0);
    cmpc(3);
    int x = 10;
    while (gmpc(0)>-(deg*x))
    {
        motor(0, -50);
        motor(3, 50);
    }
}
void left(int deg)
{
    cmpc(0);
    int x = 9.3;
    while (gmpc(0)<(deg*x))
    {
        motor(0, 50);
        motor(3, -50);
    }
}

void newstart()
{
    msleep(500);
    forward(5);
    ao();
    msleep(500);
    left(65);
    motor(0,100);
    motor(3,100);
    msleep(3000);
    while(analog(4)<1800)
    {
        motor(0,100);
        motor(3,100);
    }
    forward(2);
    ao();
    msleep(500);
    right(50);
    ao();
    msleep(500);
	ao();
}

void reset()
{
    enable_servos();
    set_servo_position(0,280);
    msleep(500);
    set_servo_position(1,1800);
    set_servo_position(2,1900);
    msleep(500);
    disable_servos();
}

void scoop()
{
    
    enable_servos();
    
    motor(2, 50);
    msleep(500);
    ao();
    msleep(2000);
    
    //reverse(10); 
    motor(2, -50);
    msleep(500);
    ao();
    msleep(2000);
    
    set_servo_position(2,1200);
    msleep(1000);
    
    motor(2, 50);
    msleep(500);
    ao();
    msleep(2000);
    
    set_servo_position(2,400);
    msleep(1000);
    disable_servos();
    
    
}

void pipetracking()
{
    reverse(10);
	cmpc(0);
	while (analog(3) > 1400)
	{
    	if (analog(3)<2650)
    	{
        	motor(0,-40);
        	motor(3,-50);
    	}
    	else
    	{
        	motor(0,-50);
        	motor(3,-40);
    	}
    }
    reverse(35);
}

void waterCollection()
{
    reverse(10);
    scoop();
    int x = 0;
    while (x < 3)
    {
        reverse(30);
    	scoop();
        x = x + 1;
    }
}

void untilWall(int dir, int pow)
{
    while (digital(8) == 0) //bumper pressed aginst back wall
    {
        motor(0, (dir * pow) - (1 * dir));
        motor(3, dir * pow);
    }
}

void untilColor(int color)
{
    if(color == 1)
    {
        while (analog(0) < 1600) //Go until black
    	{
            motor(0, 75);
            motor(3, 75);
    	}
        
    }
    else
    {
     	while (analog(0) > 1600) //go until white
    	{
            motor(0, 75);
            motor(3, 75);
    	} 
    }
}

void lineFollow()
{
enable_servos();
set_servo_position(1,1750);
disable_servos();
    while(analog(2) < 2350)
    {
        if (analog(0) > 1800)
        {
            motor(0, 30);
       		motor(3, 40);
            msleep(1);
        }
        else
        {
            motor(0, 40);
        	motor(3, 30);
            msleep(1);
        }
    }
    ao();
    enable_servos(); 
    set_servo_position(0,1600);
    msleep(500);
    set_servo_position(1,150);
    msleep(1000);
    set_servo_position(1,1700);
    msleep(500);
    set_servo_position(0,280);
    disable_servos();
}

void upSlow(int start, int end, int val)
{
    int i = start;
    while (i > end)
    {
        set_servo_position(0,i);
        i = i - val;
        //motor(0, -5);
        //motor(3, -5);
    }   
}

void pickUpValve()
{   
    ao();
    enable_servos();
    set_servo_position(1,1700); //open
    msleep(1000);
    set_servo_position(0,1850); //down
    msleep(1000);
    set_servo_position(1,120); //close
    msleep(1000);
    /*
	set_servo_position(0,1500);
    msleep(100);
    set_servo_position(0,1000);
    msleep(100);
    set_servo_position(0,700);
    msleep(100);
    set_servo_position(0,280);
    msleep(100);
    */
    //upSlow(1500, 280, .3);
    set_servo_position(0,250);
    
    msleep(2000);   
    disable_servos();
    reverse(7);
    ao();
    enable_servos();
    
    set_servo_position(0,280); //down
    msleep(10);
    disable_servos();
}

void collectWater()
{
    //reset();
   /* msleep(500);
    forward(30); // pass start line
    untilColor(1);// go until see black line
    forward(5);
    right(95); //turn right
    forward(20); // go to blue
    */
    lineFollow();
    pickUpValve();
    left(95); // face blue

    //waterCollection(); // water collection
    //untilWall(-1, 75); // go untill hit far wall
    //reverse(170);

    
    //left(180); // turn to face playing field
    
}

void dropoffvalve()
{
    left(95); // turn toward utility zone    
    untilColor(1); //go until hit back wall
    forward(40);
    ao();
    
    enable_servos();
    set_servo_position(0,1500); //down 560
    msleep(1000);
    set_servo_position(1,1700); //open
    msleep(1000);
    set_servo_position(0,560);
    disable_servos();
}

void clawUp()
{   
    set_servo_position(0,50);
    msleep(1000);
    set_servo_position(1,1500);
    msleep(1000);
}
void clawDown()
{
    set_servo_position(1,200);
    msleep(1000);
    set_servo_position(0,1000);
    msleep(1000);
}

void setPowerLines()
{
    ao();
    reset();
    while(analog(2) < 2700)
    {
        if (analog(0) > 1800)
        {
            motor(0, 20);
       		motor(3, 30);
            msleep(1);
        }
        else
        {
            motor(0, 30);
        	motor(3, 20);
            msleep(1);
        }
    }
    ao();
    right(92);
    ao();
    motor(0,-49);
    motor(3,-50);
    msleep(3000);
    ao();
    enable_servos();
    set_servo_position(2,300);
    motor(0,-24);
    motor(3,-25);
    msleep(2000);
    set_servo_position(2,150);
    motor(0,-24);
    motor(3,-25);
    msleep(3000);
    ao();
    motor(0,25);
    motor(3,25);
    msleep(1000);
    set_servo_position(2,1900);
    motor(0,50);
    motor(3,52);
    msleep(3000);
    set_servo_position(2,300);
    motor(0,25);
    motor(3,25);
    msleep(3000);
    set_servo_position(2,150);
    motor(0,25);
    motor(3,26);
    msleep(3000);
    motor(0,-15);
    motor(3,15);
    msleep(700);
    motor(0,25);
    motor(3,-25);
    msleep(500);
    ao();
    set_servo_position(2,1900);
    
}

void gasValve()
{
    left(180);
    ao();
    reset();
    while(analog(2) < 2250)
    	{
        motor(0,49);
        motor(3,50);
    	}
    ao();
    enable_servos(); 
    set_servo_position(0,1600);
    msleep(500);
    set_servo_position(1,150);
    msleep(1000);
    set_servo_position(1,1700);
    msleep(500);
    set_servo_position(0,280);
    disable_servos();
    pickUpValve();
    left(207); //turn around
    forward(55);
    left(10);
    ao();
    msleep(750);
    enable_servos();
    set_servo_position(0,1800);
    msleep(1000);
    set_servo_position(1,1500);
    msleep(1000);
    motor(0,50);
    motor(3,50);
    msleep(1000);
    reset();
	while(analog(4)<1800)
    	{
    	motor(0,-50);
    	motor(3,-50);
    	}
    ao();
    msleep(1000);
    motor(0,25);
    motor(3,25);
    msleep(500);
    ao();
    msleep(1000);
	while(analog(0)<1800)
    	{
    	motor(0,10);
    	motor(3,-10);
    	}
    ao();
    msleep(1000);
    //drop
    disable_servos();
}

void start()
{
    msleep(500);
    forward(10);
    ao();
    msleep(500);
    ao();
    
    left(87);
    ao();
    msleep(500);
    enable_servos();
    set_servo_position(0,600); //drop
    disable_servos();
}

int main()
{    
    wait_for_light(1);
    reset();
    shut_down_in(118);
    //start();
    newstart();
    collectWater();
    pipetracking();
    dropoffvalve();
    gasValve();
    setPowerLines();
    //pickUpValve();
    //lineFollow();
    
    ao();
    return 0;
}

